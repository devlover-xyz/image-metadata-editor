name: "Vendor Library Dependencies"
on:
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force library update even if no changes detected'
        type: boolean
        default: false
  schedule:
    - cron: '0 0 1 * *'  # Berjalan setiap bulan sekali

jobs:
  extract-windows-libraries:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}  # Gunakan PAT dengan izin push

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-gexiv2

      - name: Run Windows Library Extraction Script
        shell: pwsh
        run: |
          # Set execution policy for current process
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process -Force
          
          # Verify script exists
          if (!(Test-Path "scripts/extract-windows-libs.ps1")) {
            Write-Error "Script not found: scripts/extract-windows-libs.ps1"
            exit 1
          }
          
          # Run the extraction script
          Write-Host "Menjalankan script ekstraksi library Windows..."
          ./scripts/extract-windows-libs.ps1

      - name: Commit Windows Libraries
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add src-tauri/libs/windows
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update Windows libraries" && git push)

  extract-macos-libraries:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}  # Gunakan PAT dengan izin push

      - name: Run macOS Library Extraction Script
        run: |
          # Verify script exists
          if [ ! -f "scripts/extract-macos-libs.sh" ]; then
            echo "Script not found: scripts/extract-macos-libs.sh"
            exit 1
          fi
          
          # Make the script executable
          chmod +x scripts/extract-macos-libs.sh
          
          # Run the extraction script
          echo "Menjalankan script ekstraksi library macOS..."
          ./scripts/extract-macos-libs.sh

      - name: Commit macOS Libraries
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add src-tauri/libs/macos
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update macOS libraries" && git push)

  extract-linux-libraries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}  # Gunakan PAT dengan izin push

      - name: Run Linux Library Extraction Script
        run: |
          # Verify script exists
          if [ ! -f "scripts/extract-linux-libs.sh" ]; then
            echo "Script not found: scripts/extract-linux-libs.sh"
            exit 1
          fi
          
          # Make the script executable
          chmod +x scripts/extract-linux-libs.sh
          
          # Run the extraction script with sudo
          echo "Menjalankan script ekstraksi library Linux..."
          sudo ./scripts/extract-linux-libs.sh

      - name: Commit Linux Libraries
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add src-tauri/libs/linux
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update Linux libraries" && git push)

  create-pr:
    needs: [extract-windows-libraries, extract-macos-libraries, extract-linux-libraries]
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.force_update == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.REPO_TOKEN }}
          ref: main
          fetch-depth: 0

      - name: Check for changes and create PR
        run: |
          git fetch origin
          # Buat branch baru untuk perubahan
          git checkout -b update-libs-${{ github.run_id }}
          # Ambil semua perubahan dari branch main
          git merge origin/main
          
          # Cek apakah ada perubahan yang perlu di-merge
          if git diff --quiet origin/main -- src-tauri/libs; then
            echo "No library changes detected, skipping PR creation"
            exit 0
          fi
          
          # Push branch baru
          git push --set-upstream origin update-libs-${{ github.run_id }}
          
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          
          # Buat PR
          gh pr create --title "Update bundled libraries" \
                      --body "This PR updates native library dependencies for multiple platforms" \
                      --base main \
                      --head update-libs-${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
