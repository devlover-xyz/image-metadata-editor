name: "publish"

on:
  push:
    branches:
      - main

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          # - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      # - name: setup node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: lts/*

      - name: install bun
        uses: oven-sh/setup-bun@v2

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      #   # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
      #   # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: Extract GExiv2 Dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          # Set up MSYS2
          choco install msys2
          # Install GExiv2
          C:\msys64\usr\bin\bash.exe -lc "pacman -S --noconfirm mingw-w64-x86_64-gexiv2"

      - name: Extract GExiv2 Dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install gexiv2 pkg-config
          mkdir -p src-tauri/libs/macos
          export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
          cp $(brew --prefix)/lib/libgexiv2.dylib src-tauri/libs/macos/
          
      - name: Run extract_lib script
        run: |
          chmod +x ./extract_lib.sh
          ./extract_lib.sh

      - name: install frontend dependencies
        run: bun install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
